#!/bin/bash

# Caddie.sh - GitHub Module
# This file contains GitHub account management and integration functions

# GitHub account management functions
function caddie_github_account_set() {
    local account="$1"
    
    if [ -z "${account}" ]; then
        caddie cli:red "Error: Please provide a GitHub account name"
        caddie cli:usage "caddie github:account:set <account>"
        return 1
    fi
    
    export CADDIE_GITHUB_ACCOUNT="${account}"
    
    caddie cli:check "GitHub account set to: ${account}"
}

function caddie_github_account_get() {
    echo "${CADDIE_GITHUB_ACCOUNT}"
}

function caddie_github_account_unset() {
    unset CADDIE_GITHUB_ACCOUNT
    caddie cli:check "GitHub account unset"
}

# Repository management functions
function caddie_github_repo_create() {
    local repo_name="$1"
    local description="$2"
    local private="${3:-false}"
    
    if [ -z "${repo_name}" ]; then
        caddie cli:red "Error: Please provide a repository name"
        caddie cli:usage "caddie github:repo:create <name> [description] [private]"
        return 1
    fi
    
    local github_account=$(caddie_github_account_get)
    if [ -z "${github_account}" ]; then
        caddie cli:red "Error: No GitHub account set. Use 'caddie github:account:set <account>' first"
        return 1
    fi
    
    # Use GitHub CLI if available, otherwise provide instructions
    if command -v gh >/dev/null 2>&1; then
        local gh_args="repo create ${github_account}/${repo_name}"
        
        if [ -n "${description}" ]; then
            gh_args="${gh_args} --description \"${description}\""
        fi
        
        if [ "${private}" = "true" ]; then
            gh_args="${gh_args} --private"
        else
            gh_args="${gh_args} --public"
        fi
        
        caddie cli:title "Creating GitHub repository..."
        eval "gh ${gh_args}"
        
        if [ $? -eq 0 ]; then
            caddie cli:check "Repository created successfully"
            caddie cli:info "Repository URL: https://github.com/${github_account}/${repo_name}"
        else
            caddie cli:red "Failed to create repository"
            return 1
        fi
    else
        caddie cli:warning "GitHub CLI not found. Please create repository manually:"
        caddie cli:info "URL: https://github.com/new"
        caddie cli:info "Repository name: ${repo_name}"
        caddie cli:info "Owner: ${github_account}"
        if [ -n "${description}" ]; then
            caddie cli:info "Description: ${description}"
        fi
        caddie cli:info "Visibility: $([ "${private}" = "true" ] && echo "Private" || echo "Public")"
    fi
}

function caddie_github_repo_url() {
    local repo_name="$1"
    
    if [ -z "${repo_name}" ]; then
        # Auto-detect repository name from current directory
        repo_name=$(basename "$(pwd)")
    fi
    
    local github_account=$(caddie_github_account_get)
    if [ -z "${github_account}" ]; then
        caddie cli:red "Error: No GitHub account set. Use 'caddie github:account:set <account>' first"
        return 1
    fi
    
    local url="https://github.com/${github_account}/${repo_name}.git"
    echo "${url}"
}

# Function to show GitHub module help
function caddie_github_help() {
    caddie cli:title "GitHub Module Commands"
    caddie cli:blank
    caddie cli:usage "caddie github:<command>"
    caddie cli:blank
    caddie cli:title "Account Management:"
    caddie cli:indent "account:set <name>      Set GitHub account name"
    caddie cli:indent "account:get            Get current GitHub account"
    caddie cli:indent "account:unset         Unset GitHub account"
    caddie cli:blank
    caddie cli:title "Repository Management:"
    caddie cli:indent "repo:create <name> [desc] [private]  Create new repository"
    caddie cli:indent "repo:url [name]       Get repository URL (auto-detects if no name)"
    caddie cli:blank
    caddie cli:title "Examples:"
    caddie cli:indent "caddie github:account:set parnotfar"
    caddie cli:indent "caddie github:repo:create my-project 'My awesome project'"
    caddie cli:indent "caddie github:repo:url"
    caddie cli:blank
}

function caddie_github_description() {
    echo 'GitHub account and repository management'
}

# Export GitHub functions
export -f caddie_github_account_set
export -f caddie_github_account_get
export -f caddie_github_account_unset
export -f caddie_github_repo_create
export -f caddie_github_repo_url
export -f caddie_github_help
export -f caddie_github_description
