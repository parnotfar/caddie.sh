# Caddie.sh Color Definitions using tput
# This provides reliable color definitions for the prompt system

# Common colors for reference
export BOLD=$(tput bold)
export RED=$(tput setaf 1)
export GREEN=$(tput setaf 2)
export YELLOW=$(tput setaf 3)
export BLUE=$(tput setaf 4)
export PURPLE=$(tput setaf 5)
export CYAN=$(tput setaf 6)
export WHITE=$(tput setaf 7)
export GREY=$(tput setaf 8)
export ORANGE=$(tput setaf 9)
export RESET=$(tput sgr0)

# common functions for print to stdout
function caddie-cli() {
  action=$1
  text=$2
  color=$3

  case "${action}" in
    help)
      echo "Usage: caddie-cli <action> [text] [color]"
      echo ""
      echo "Actions:"
      echo "  help                    - Show this help message"
      echo "  colorlist               - List all available colors"
      echo "  usage <text>            - Print usage text in blue"
      echo "  installed               - Print 'installed' in blue"
      echo "  complete                - Print 'complete' in blue"
      echo "  title <text>            - Print title with green formatting"
      echo "  <color> <text>          - Print text in specified color"
      echo "  <color>:bold <text>     - Print text in bold specified color"
      echo "  out <text> [color]      - Print text in color (default: blue)"
      echo "  bold <text> [color]    - Print text in bold color"
      echo ""
      echo "Colors: red, green, yellow, blue, purple, cyan, grey, orange, white"
      ;;
    color*list)
      echo ${BOLD}BOLD${RESET}
      echo ${RED}RED${RESET}
      echo ${GREEN}GREEN${RESET}
      echo ${YELLOW}YELLOW${RESET}
      echo ${BLUE}BLUE${RESET}
      echo ${PURPLE}PURPLE${RESET}
      echo ${CYAN}CYAN${RESET}
      echo ${GREY}GREY${RESET}
      echo ${ORANGE}ORANGE${RESET}
      echo ${WHITE}WHITE${RESET}
      echo ${WHITE}RESET${RESET}
      ;;
    usage)
      echo ${BOLD}${BLUE}Usage: ${text}${RESET}
      ;;
    installed)
      echo ${BOLD}${BLUE}installed${RESET}
      ;;
    complete)
      echo ${BOLD}${BLUE}complete${RESET}
      ;;
    title)
      echo ${BOLD}${GREEN}== ${text} ==${RESET}
      ;;
    red)
      caddie-cli out "$2" red
      ;;
    red:b*)
      caddie-cli bold "$2" red
      ;;
    green)
      caddie-cli out "$2" green
      ;;
    green:b*)
      caddie-cli bold "$2" green
      ;;
    yellow)
      caddie-cli out "$2" yellow
      ;;
    yellow:b*)
      caddie-cli bold "$2" yellow
      ;;
    blue)
      caddie-cli out "$2" blue
      ;;
    blue:b*)
      caddie-cli bold "$2" blue
      ;;
    purple)
      caddie-cli out "$2" purple
      ;;
    purple:b*)
      caddie-cli bold "$2" purple
      ;;
    cyan)
      caddie-cli out "$2" cyan
      ;;
    cyan:b*)
      caddie-cli bold "$2" cyan
      ;;
    grey)
      caddie-cli out "$2" grey
      ;;
    grey:b*)
      caddie-cli bold "$2" grey
      ;;
    orange)
      caddie-cli out "$2" orange
      ;;
    orange:b*)
      caddie-cli bold "$2" orange
      ;;
    white)
      caddie-cli out "$2" white
      ;;
    white:b*)
      caddie-cli bold "$2" white
      ;;
    out)
      if [ -z "${color}" ]; then
        color=BLUE
      else
        color=$(echo ${color} | tr '[a-z]' '[A-Z]')
      fi

      cmd="echo \${$color}\${text}\${RESET}"

      eval $cmd
      ;;
    bold)
      text=$(caddie-cli out "${text}" $color)

      echo "${BOLD}${text}${RESET}"
      ;;
  esac
}