#!/bin/bash

# Caddie.sh - Core Functions
# This file contains the main caddie function and core functionality

# Default caddie home file location
CADDIE_HOME_FILE="$HOME/.caddie_home"

# Main registration function for core module
core_register() {
    core_help_register
    core_commands_register
}

# Register help information
core_help_register() {
    caddie_help_append "core" "Core caddie functions"
}

# Register commands
core_commands_register() {
    caddie_commands_append "core:set:home|caddie_set_home|Set caddie home directory"
    caddie_commands_append "core:get:home|caddie_get_home|Get current caddie home"
    caddie_commands_append "core:reset:home|caddie_reset_home|Reset caddie home directory"
    caddie_commands_append "core:help|caddie_core_help|Show core caddie help"
}

# Function to set the caddie home directory
caddie_set_home() {
    local path="$1"
    
    if [ -z "$path" ]; then
        echo "Error: Please provide a path for caddie home"
        echo "Usage: caddie core:set:home <path>"
        return 1
    fi
    
    # Expand the path (handle ~, relative paths, etc.)
    local expanded_path

    expanded_path=$(eval echo "$path")
    
    # Check if the path exists
    if [ ! -d "$expanded_path" ]; then
        echo "Error: Directory '$expanded_path' does not exist"
        return 1
    fi
    
    # Get the absolute path
    local absolute_path

    absolute_path=$(cd "$expanded_path" && pwd)
    
    # Save the path to the caddie home file
    echo "$absolute_path" > "$CADDIE_HOME_FILE"
    
    export CADDIE_HOME="$absolute_path"
    
    echo "✓ Caddie home directory set to: $absolute_path"
}

# Function to get the caddie home directory
caddie_get_home() {
    if [ -f "$CADDIE_HOME_FILE" ]; then
        local caddie_home

        caddie_home=$(cat "$CADDIE_HOME_FILE")

        echo "Current caddie home: $caddie_home"
    else
        echo "No caddie home directory was set"
    fi
}

# Function to reset the caddie home directory
caddie_reset_home() {
    if [ -f "$CADDIE_HOME_FILE" ]; then
        rm "$CADDIE_HOME_FILE"
        unset CADDIE_HOME
        echo "✓ Caddie home directory has been reset"
    else
        echo "No caddie home directory was set"
    fi
}

# Function to show caddie version
caddie_version() {
    if [ -f "$HOME/.caddie_version" ]; then
        # shellcheck disable=SC1091
        source "$HOME/.caddie_version"
        caddie_version_show
    else
        echo "Caddie.sh version: unknown"
    fi
}

# Function to show core caddie help
caddie_core_help() {
    echo "Core Caddie Functions"
    echo "===================="
    echo ""
    echo "Usage: caddie core:<command>"
    echo ""
    echo "Home Directory Management:"
    echo "  set:home <path>     Set caddie home directory"
    echo "  get:home            Get current caddie home"
    echo "  reset:home          Reset caddie home directory"
    echo ""
    echo "Examples:"
    echo "  caddie core:set:home ~/projects/myproject"
    echo "  caddie core:get:home"
    echo "  caddie core:reset:home"
}

# Main caddie function removed - now handled by dot_caddie

# Auto-load caddie home on shell startup
if [ -f "$CADDIE_HOME_FILE" ]; then
    local caddie_home
    caddie_home=$(cat "$CADDIE_HOME_FILE")
    export CADDIE_HOME="$caddie_home"
fi

# Tab completion function removed - now handled by dot_caddie

# Export core functions
export -f core_caddie_register
export -f caddie_set_home
export -f caddie_get_home
export -f caddie_reset_home
export -f caddie_version
export -f caddie_core_help